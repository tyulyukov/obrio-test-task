services:
  postgres:
    image: postgres:17.5-alpine
    restart: always
    command: postgres -c 'max_connections=400'
    ports:
      - '5432:5432'
    env_file:
      - './.env'
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', '${POSTGRES_USER}' ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    volumes:
      - ./db/postgres:/var/lib/postgresql/data:z

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server /usr/local/etc/redis/redis.conf --bind 0.0.0.0 --protected-mode no
    volumes:
      - ./db/redis:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf

  api:
    restart: always
    build:
      context: .
      dockerfile: ./src/apps/api/Dockerfile
    volumes:
      - ./src:/usr/src/app/src
    links:
      - postgres:postgres
      - redis:redis
    depends_on:
      - postgres
      - redis
#    ports:
#      - ${API_PORT}:${API_PORT}
    env_file: .env

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "${API_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api

  processor:
    restart: always
    build:
      context: .
      dockerfile: ./src/apps/processor/Dockerfile
    volumes:
      - ./src:/usr/src/app/src
    links:
      - postgres:postgres
      - redis:redis
    depends_on:
      - postgres
      - redis
#    ports:
#      - ${PROCESSOR_PORT}:${PROCESSOR_PORT}
    env_file: .env
